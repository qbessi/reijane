---
import MainLayout from "../../../layouts/MainLayout.astro";
import ArticleCard from "../../../components/ui/ArticleCard.astro";
import { getCollection } from 'astro:content';
import type { CollectionEntry } from "astro:content";
import { capitalize } from "../../../utils";

// 1. Add this export to generate paths for each tag
export async function getStaticPaths() {
  const articles = await getCollection('blog');

  const tags = new Set<string>();

  for (const article of articles) {
    if (Array.isArray(article.data.tags)) {
      for (const tag of article.data.tags) {
        tags.add(tag);
      }
    }
  }

  return Array.from(tags).map(tag => ({
    params: { tag },
  }));
}

// 2. Get current tag from params
const { tag } = Astro.params;

if (!tag) {
  throw new Error('Tag is required');
}

// 3. Get and filter blog posts by tag
const allBlogArticles: CollectionEntry<'blog'>[] = (await getCollection('blog'))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const tagArticles = allBlogArticles.filter(article =>
  article.data.tags.includes(tag)
);
---

<MainLayout title="Articles Tagged #{capitalize(tag)}">
  <main class="space-y-20">
    <div class="py-8 px-4 mx-auto max-w-screen-xl lg:py-16 lg:px-3">

      <a href="/articles" class="inline-flex items-center font-medium text-black hover:text-green my-4">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="h-6 w-6">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18" />
        </svg>
        <span class="ml-1 font-bold text-lg">All Articles</span>
      </a>

      <h2 class="text-2xl pb-3">#{capitalize(tag)}</h2>

      {tagArticles.length > 0 ? (
        <div class="grid gap-8 lg:grid-cols-2">
          {tagArticles.map(article => (
            <ArticleCard article={article} />
          ))}
        </div>
      ) : (
        <p>No articles found for this tag.</p>
      )}
    </div>
  </main>
</MainLayout>
